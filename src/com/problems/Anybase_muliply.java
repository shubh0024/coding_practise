package com.problems;

import java.awt.*;
import java.util.Scanner;

public class Anybase_muliply {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int b=sc.nextInt();
        int n1=sc.nextInt();
        int n2=sc.nextInt();

        int ds=getmultiply(b,n1,n2);
        System.out.println(ds);
    }
  public static int getmultiply(int b,int n1,int n2){
        int rv=0;
   int pow=1;
        while(n2>0){
            int d2= n2 % 10; //remaining digits
            n2=n2/10;

            int sprd=getmultiplywithsingledigit(b,n1,d2);//store multiplication with single number
            rv=getsum(b,rv,sprd * pow); //addtion by suming the both number

        }

        return rv;
  }
    //multiply with the single digits
    public static int getmultiplywithsingledigit(int b,int n1,int d2){
         int rv=0;
         int c=0;
         int pow=1;
         while(n1>0 || c>0 ){
             int rem=n1%10;
             n1=n1/10;

             int d= rem* d2 + c; //take out the last number to multiply it
             d= d % b;

             rv+= d * pow;
             pow=pow*10;



         }


         return rv;

    }
    public static int getsum(int b,int n1,int n2){
        int rv=0; //last value
        int carr=0; //carry generated by the sum
        int pow=1;
        while(n1>0 || n2>0 || carr>0){
            int rem1=n1%10;
            int rem2=n2%10;
            n1=n1/10;
            n2=n2/10;

            int d=rem1 + rem2 + carr; //adding  the number with remaingng
            carr= d / b; //getting the number after deviding by the base
            int lastrem=d % b;     //getting the rhs value of the after addition

            rv+= lastrem * pow;  //multiplying the last rem with pow 10 to attain the right position
            pow=pow*10;

        }

        return rv;
    }
}
